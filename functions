function mk_game_dir {
    TMPDIR="$(mktemp -d -t dominos)"
    trap "rm -rf '$TMPDIR'" EXIT INT HUP TERM
    echo $TMPDIR
}

function mk_subdirs {
    dest=$1
    mkdir -p $dest/{1,2,pool,game}
}

function create_tiles {
    dest=$1
    # make a source file to avoid dependence on /dev/zero
    echo '0123456789ABCDEF' > $dest/.zero
    
    lpip=0
    while [ $lpip -le 6 ]; do
        rpip=0
        while [ $rpip -le $lpip ]; do
            # make the file [number of pips] bytes long
            dd if=$dest/.zero of=$dest/pool/$lpip:$rpip count=$((lpip + rpip)) bs=1
            rpip=$((rpip + 1))
        done
        lpip=$((lpip + 1))
    done
}

function play_dominos {
    # make a temp directory => $t
    gamedir=$(mk_game_dir)
    echo "Playing dominos in $gamedir"
    
    # make empty directories $t/{1,2,pool,game}
    mk_subdirs $gamedir
    
    # create the domino set in $t/pool
    create_tiles $gamedir
    
    # dish out dominos to players $t/1 and $t/2
    # set played = 0
    # set can_play = 2
    # set turn = 1
    # while pool_size > 2 and can_play > 0 and p1_size > 0 and p2_size > 0
    #   while player $turn can't go and pool_size > 2
    #     get a domino from the pool
    #   if pool_size == 2: goto end_game
    #
    #   find the highest matching domino and play it
    #   set can_play = 2
    #   if played == 0 then move domino to $t/game
    #   else create appropriate link in $t/game && rm $t/$turn/$domino
    # end
    # calculate dot count for each player
    # lowest score wins
}